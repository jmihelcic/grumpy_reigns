{"version":3,"sources":["card.es6"],"names":[],"mappings":"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","file":"card.js","sourcesContent":["/**\r\n * Created by mihelcic on 28. 08. 2016.\r\n */\r\n\r\nclass Card {\r\n  constructor() {\r\n    // Elements\r\n    this.container = document.querySelector('.body__card-container')\r\n    this.card = this.container.querySelector('.playing-card')\r\n    this.cardBack = this.container.querySelector('.playing-card-back')\r\n    this.responseYes = this.card.querySelector('.response-yes')\r\n    this.responseNo = this.card.querySelector('.response-no')\r\n\r\n    // Texts\r\n    this.cardDescription = document.querySelector('.card-description__text')\r\n    this.cardName = document.querySelector('.card-name__text')\r\n\r\n    // Card data\r\n    this.name = 'Grumpy Grumpalot'\r\n    this.description = 'I want your food. And I want it now!'\r\n    this.image = ''\r\n\r\n    // Layout data\r\n    this.cardWidth = 250\r\n    this.cardHeight = 250\r\n    this.dismissLength = this.cardWidth * 0.4\r\n\r\n    // Animation data\r\n    this.loadingNewCard = false\r\n    this.dragging = false\r\n    this.locked = false\r\n    // Position\r\n    let cardBCR = this.container.querySelector('.deck').getBoundingClientRect()\r\n    this.cardX = cardBCR.left\r\n    this.cardY = cardBCR.top\r\n    this.transformX = 0\r\n    this.transformY = 0\r\n    // Mouse position\r\n    this.startX = 0\r\n    this.currentX = 0\r\n    this.targetX = 0 // Used to determine where the card should go when released\r\n\r\n    // Bind methods\r\n    this._descriptionDown = this._descriptionDown.bind(this)\r\n    this.update = this.update.bind(this)\r\n    // Initialize\r\n    this.initEventListeners()\r\n  }\r\n\r\n  load(name, description, image) {\r\n    this.name = name\r\n    this.description = description\r\n    this.image = image\r\n  }\r\n\r\n  _descriptionDown() {\r\n    requestAnimationFrame(() => {\r\n      this.cardDescription.textContent = this.description\r\n      this.cardDescription.style.transition = 'none'\r\n      this.cardDescription.style.transform = 'translate3d(0,-20px,0)'\r\n      this.cardDescription.style.opacity = '0'\r\n      requestAnimationFrame(() => {\r\n        this.cardDescription.style.transition = 'all 0.2s linear'\r\n        this.cardDescription.style.transform = 'translate3d(0,0,0)'\r\n        this.cardDescription.style.opacity = '1'\r\n      })\r\n    })\r\n\r\n    this.cardDescription.removeEventListener('transitionend', this._descriptionDown)\r\n  }\r\n\r\n\r\n\r\n  initEventListeners() {\r\n    this.card.addEventListener('animationend', () => {\r\n      this.cardBack.style.animation = 'none'\r\n      this.card.style.animation = 'none'\r\n      // Show responses after animation\r\n      this.responseYes.style.display = 'block'\r\n      this.responseNo.style.display = 'block'\r\n    })\r\n\r\n    this.container.addEventListener('touchstart', (event) => {\r\n      // Skip if the target is not a draggable card\r\n      if (!event.target.classList.contains('playing-card'))\r\n        return\r\n\r\n      this.startX = event.touches[0].pageX\r\n      this.currentX = event.touches[0].pageX\r\n      if(!this.locked) // Prevent multiple calls\r\n        requestAnimationFrame(this.update)\r\n      this.dragging = true\r\n      this.locked = true\r\n    })\r\n\r\n\r\n    this.container.addEventListener('touchmove', (event) => {\r\n      // Skip if we didn't start dragging on a draggable card\r\n      if (!this.dragging)\r\n        return\r\n      // Update the current mouse position\r\n      this.currentX = event.touches[0].pageX\r\n    })\r\n\r\n\r\n    this.container.addEventListener('touchend', (event) => {\r\n      // Skip if we didn't start dragging on a draggable card\r\n      if (!this.dragging)\r\n        return\r\n\r\n      // Set target\r\n      this.targetX = 0\r\n      let distance = this.currentX - this.startX\r\n      if (Math.abs(distance) > this.dismissLength) {\r\n        this.targetX = (distance > 0)\r\n          ? this.cardWidth\r\n          : -this.cardWidth\r\n      }\r\n\r\n      this.dragging = false\r\n    })\r\n  }\r\n\r\n  update() {\r\n    // If we are no longer dragging, ease the position od the card\r\n    if(this.dragging) {\r\n      this.transformX = this.currentX - this.startX\r\n    }\r\n    else {\r\n      this.transformX += (this.targetX - this.transformX) / 8\r\n    }\r\n\r\n    // Calculate the transform values\r\n    let distance = this.transformX / this.cardWidth\r\n    let normalizedDistance = (Math.abs(this.transformX) / this.cardWidth)\r\n    let ducking = 50 * normalizedDistance\r\n    let opacity = 1 - Math.pow(normalizedDistance, 3)\r\n    let rotation = 15 * Math.pow(distance, 1)\r\n    let transform = `translate3d(${this.transformX}px, ${ducking}px, 0) rotate(${rotation}deg)`\r\n    // Response\r\n    let responseDuck = Math.min(-128 + (128 * normalizedDistance * 4), -28)\r\n\r\n    this.card.style.transform = transform\r\n    this.card.style.opacity = opacity\r\n\r\n    if(distance > 0) {\r\n      this.responseNo.style.display = 'none'\r\n      this.responseYes.style.display = 'block'\r\n      this.responseNo.style.transform = `translate3d(0,-128px,0) rotate(0deg)`\r\n      this.responseYes.style.transform = `translate3d(0,${responseDuck}px,0) rotate(${-rotation}deg)`\r\n    } else {\r\n      this.responseNo.style.display = 'block'\r\n      this.responseYes.style.display = 'none'\r\n      this.responseNo.style.transform = `translate3d(0,${responseDuck}px,0) rotate(${-rotation}deg)`\r\n      this.responseYes.style.transform = `translate3d(0,-128px,0) rotate(0deg)`\r\n    }\r\n\r\n    //console.log('update', transform)\r\n\r\n    let closeToStart = (Math.abs(this.transformX) < 1.0)\r\n    let closeToInvisible = (opacity < 0.05)\r\n\r\n    if(!this.dragging) {\r\n      // Animation reset + colors\r\n      if(closeToInvisible) {\r\n        // Test changing text\r\n        this.cardDescription.addEventListener('transitionend', this._descriptionDown)\r\n        this.cardDescription.style.transform = 'translate3d(0,20px,0)'\r\n        this.cardDescription.style.opacity = '0'\r\n        // Hide responses during animation\r\n        this.responseYes.style.display = 'none'\r\n        this.responseNo.style.display = 'none'\r\n\r\n        let descriptions = [\r\n          'I want all of your money!',\r\n          'Get away from me!',\r\n          'I don\\'t want hugs!',\r\n          'Please, just go away, and leave me be...',\r\n          'You like being annoying huh?',\r\n          '*sigh*'\r\n        ]\r\n        let colors = ['#ff4500','#00ff50','#0087ff','#ff008b']\r\n        this.card.style.background = colors[Math.floor(Math.random()*colors.length)]\r\n        this.description = descriptions[Math.floor(Math.random()*descriptions.length)]\r\n        if(distance > 0) {\r\n          this.cardBack.style.animation = 'flip-left 0.6s'\r\n          this.card.style.animation = 'flip-back-left 0.6s'\r\n        } else {\r\n          this.cardBack.style.animation = 'flip-right 0.6s'\r\n          this.card.style.animation = 'flip-back-right 0.6s'\r\n        }\r\n      }\r\n      if(closeToStart || closeToInvisible) {\r\n        this.card.style.transform = 'translate3d(0,0,0) rotate(0deg)'\r\n        this.card.style.opacity = 1\r\n        this.responseNo.style.transform = 'translate3d(0,-128px,0) rotate(0deg)'\r\n        this.responseYes.style.transform = 'translate3d(0,-128px,0) rotate(0deg)'\r\n        this.transformX = 0\r\n        this.locked = false\r\n        return\r\n      }\r\n    }\r\n\r\n    requestAnimationFrame(this.update)\r\n  }\r\n}\r\n\r\n"]}